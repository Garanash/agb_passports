#!/usr/bin/env python3
"""
–ï–¥–∏–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ AGB Passports
"""

import os
import sys
import subprocess
import time
from pathlib import Path

class ProjectSetup:
    """–ö–ª–∞—Å—Å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ AGB Passports"""

    def __init__(self):
        self.project_root = Path(__file__).parent
        self.excel_file = self.project_root / "–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞ –∞–ª–º–∞–∑–Ω—ã–π –∏–Ω—Å—Ç—É—Ä–º–µ–Ω—Ç ALFA.xlsx"

    def check_requirements(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π"""
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π...")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
        try:
            result = subprocess.run(['docker', '--version'], capture_output=True, text=True)
            if result.returncode == 0:
                print(f"   ‚úÖ Docker: {result.stdout.strip()}")
            else:
                print("   ‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                return False
        except FileNotFoundError:
            print("   ‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH")
            return False

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
        try:
            result = subprocess.run(['docker-compose', '--version'], capture_output=True, text=True)
            if result.returncode == 0:
                print(f"   ‚úÖ Docker Compose: {result.stdout.strip()}")
            else:
                print("   ‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                return False
        except FileNotFoundError:
            print("   ‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH")
            return False

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ Excel —Ñ–∞–π–ª–∞
        if self.excel_file.exists():
            print(f"   ‚úÖ Excel —Ñ–∞–π–ª –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä –Ω–∞–π–¥–µ–Ω: {self.excel_file.name}")
        else:
            print(f"   ‚ùå Excel —Ñ–∞–π–ª –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω: {self.excel_file}")
            return False

        return True

    def stop_existing_services(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"""
        print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...")
        try:
            subprocess.run(['docker-compose', 'down', '-v'], check=False)
            print("   ‚úÖ –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        except Exception as e:
            print(f"   ‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ: {e}")

    def build_and_start_services(self):
        """–°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"""
        print("üî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...")

        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã
        result = subprocess.run(['docker-compose', 'build'], capture_output=True, text=True)
        if result.returncode != 0:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {result.stderr}")
            return False

        print("   ‚úÖ –û–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã")

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
        result = subprocess.run(['docker-compose', 'up', '-d'], capture_output=True, text=True)
        if result.returncode != 0:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {result.stderr}")
            return False

        print("   ‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã")

        # –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL
        print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL...")
        time.sleep(10)

        return True

    def load_initial_data(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        print("üìä –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        result = subprocess.run([
            'docker-compose', 'run', '--rm',
            '-v', f'{self.project_root}:/app',
            'backend', 'python3', '/app/load_data.py'
        ], capture_output=True, text=True)

        if result.returncode == 0:
            print("   ‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
            print(result.stdout)
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:"            print(result.stderr)
            return False

    def check_services_status(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"""
        print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")

        result = subprocess.run(['docker-compose', 'ps'], capture_output=True, text=True)

        if result.returncode == 0:
            print("   ‚úÖ –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:")
            print(result.stdout)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã
            if "Up" in result.stdout:
                print("   ‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                return True
            else:
                print("   ‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã")
                return False
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"            return False

    def show_final_info(self):
        """–ü–æ–∫–∞–∑ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
        print("\n" + "=" * 60)
        print("üéâ –ü–†–û–ï–ö–¢ AGB PASSPORTS –£–°–ü–ï–®–ù–û –ù–ê–°–¢–†–û–ï–ù!")
        print("=" * 60)
        print("")
        print("üåê –î–û–°–¢–£–ü –ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Æ:")
        print("   Frontend:        http://localhost:3001")
        print("   Backend API:     http://localhost:8000")
        print("   API Docs:        http://localhost:8000/docs")
        print("   PostgreSQL:      localhost:5435")
        print("")
        print("üîë –£–ß–ï–¢–ù–´–ï –ó–ê–ü–ò–°–ò:")
        print("   –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:   admin / admin123")
        print("   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:    testuser / test123")
        print("")
        print("üìä –ó–ê–ì–†–£–ñ–ï–ù–ù–´–ï –î–ê–ù–ù–´–ï:")
        print("   –ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä:     23 –ø–æ–∑–∏—Ü–∏–∏")
        print("   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:   2 (–∞–¥–º–∏–Ω + –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)")
        print("")
        print("üöÄ –ü–û–õ–ï–ó–ù–´–ï –ö–û–ú–ê–ù–î–´:")
        print("   docker-compose logs -f          # –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤")
        print("   docker-compose down              # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤")
        print("   docker-compose restart backend   # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ backend")
        print("   docker-compose restart frontend  # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ frontend")
        print("")
        print("üìö –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø:")
        print("   README.md - –û–±—â–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è")
        print("   DOCKER_README.md - Docker –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è")
        print("=" * 60)

    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        print("üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –ù–ê–°–¢–†–û–ô–ö–£ –ü–†–û–ï–ö–¢–ê AGB PASSPORTS")
        print("=" * 60)

        # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
        if not self.check_requirements():
            print("\n‚ùå –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return False

        # –®–∞–≥ 2: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
        self.stop_existing_services()

        # –®–∞–≥ 3: –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
        if not self.build_and_start_services():
            print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.")
            return False

        # –®–∞–≥ 4: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        if not self.load_initial_data():
            print("\n‚ö†Ô∏è  –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã, –Ω–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é.")

        # –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
        if not self.check_services_status():
            print("\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã –º–æ–≥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")

        # –®–∞–≥ 6: –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        self.show_final_info()

        return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    setup = ProjectSetup()
    success = setup.run()

    if success:
        print("‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        return 0
    else:
        print("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
        return 1

if __name__ == "__main__":
    exit(main())
